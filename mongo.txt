// 1. Create a collection named orders.

db.createCollection('orders')

// 2. Insert at least 3 documents that represent an order.

    1. db.orders.insert({orderDate: new Date("1987-01-06"), orderTotal: 50.00,
        lineItems: [{unitPrice: 2.00, quantity: 4, productName: 'Gum'},
        {unitPrice: 5.00, quantity: 7, productName: 'Frozen Dinner'},
        {unitPrice: 12.00, quantity: 2, productName: 'emergenC'}]})

    2. db.orders.insert({orderDate: new Date("2005-06-04"), orderTotal: 30.00,
        lineItems: [{unitPrice: 1.00, quantity: 20, productName: 'straws'},
        {unitPrice: 8.00, quantity: 5, productName: 'Ice Cream'},
        {unitPrice: 3.00, quantity: 10, productName: 'rootbeer'}]})

    3. db.orders.insert({orderDate: new Date("2009-05-18"), orderTotal: 75.00,
        lineItems:
         [{unitPrice: 50.00, quantity: 17, productName: 'sheetcake'},
         {unitPrice: 13.00, quantity: 75, productName: 'paper plates'},
         {unitPrice: 4.00, quantity: 40, productName: 'forks'}]})

// 3. Find a single order document, any order document.

db.orders.find({orderTotal: 50.00})

// 4. Find all orders and make them look pretty.

db.orders.find().pretty()

// 5. Find all orders with an orderDate that is prior to 1/1/2016.

db.orders.find({orderDate: {$lt: ISODate("2016-01-01")}})

// 6. Find all orders with an orderDate that is after 1/1/2016.

db.orders.find({orderDate: {$gt: ISODate("2016-01-01")}})

// 7. Find orders with lineItems that have a quantity that is less than 50, but greater than 5.

db.orders.find({$and: [{'lineItems.quantity': {$lt: 50}}, {'lineItems.quantity': {$gt: 5}}]})